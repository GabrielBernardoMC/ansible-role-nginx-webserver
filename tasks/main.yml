---
- name: assertion test for required variables
  ansible.builtin.assert:
    that:
      - domain is defined
      - subdomain is defined
      - admin_email is defined
    msg: "'subdomain' and 'domain' and 'admin_email' are required"

- name: Set A record variable
  ansible.builtin.set_fact:
    client_a_name: '{{ subdomain }}.{{ domain }}'

- name: Check if certificate already exists.
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ client_a_name | first | replace('*.', '') }}/cert.pem
  register: local_letsencrypt_cert_first_check

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - nginx
      - python3-certbot-nginx
    update_cache: yes
    cache_valid_time: 3600
  notify: restart nginx

- name: Setup CertBot
  ansible.builtin.include_role:
    name: geerlingguy.certbot
  vars:
    certbot_admin_email: '{{ admin_email }}'
    certbot_create_if_missing: true
    certbot_create_standalone_stop_services: []
    certbot_create_command: "{{ certbot_script }} certonly --nginx --noninteractive --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
    certbot_certs:
      - domains: '{{ client_a_name }}'
    certbot_auto_renew: true
    certbot_auto_renew_user: root
    certbot_auto_renew_hour: "3"
    certbot_auto_renew_minute: "30"
    certbot_auto_renew_options: "--quiet --no-self-upgrade"
  when: "domain != 'localhost'"

- name: Set nginx SSL VirtualHost
  ansible.builtin.template:
    src: templates/virtualhost-le-ssl.conf.j2
    dest: /etc/nginx/sites-available/{{ subdomain }}.{{ domain }}-le-ssl.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify: reload nginx

- name: Enable site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ item }}.conf
    dest: /etc/nginx/sites-enabled/{{ item }}.conf
    owner: root
    group: root
    state: link
  with_items:
    - '{{ subdomain }}.{{ domain }}-le-ssl'
  notify: reload nginx
